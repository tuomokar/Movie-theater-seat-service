
package seatservice.userinterface;

import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import seatservice.domain.Hall;
import seatservice.filehandling.HallHandler;

/**
 * This class handles the GUI
 */
public class UserInterface extends javax.swing.JFrame implements Runnable {

    private HallHandler hallHandler;
    private HallNamesListener listener;
    /**
     * Creates new form UserInterfaceGuiBuilderTest
     */
    public UserInterface() {
        this.hallHandler = new HallHandler();
        hallHandler.readFile();
        initComponents();
        listener = new HallNamesListener();
        fillHallNames();
        listener = new HallNamesListener();
        addSelectionListenerToHallNames();
        fillTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        newHallNameLabel = new javax.swing.JLabel();
        rowsTextField = new javax.swing.JTextField();
        hallsNameTextField = new javax.swing.JTextField();
        seatsTextField = new javax.swing.JTextField();
        newHallRowLabel = new javax.swing.JLabel();
        newHallSeatsLabel = new javax.swing.JLabel();
        addHallButton = new javax.swing.JButton();
        nameErrorLabel = new javax.swing.JLabel();
        rowsErrorLabel = new javax.swing.JLabel();
        seatsErrorLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        removeHallButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        hallInfoTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        newHallNameLabel.setText("Hall's name");

        rowsTextField.setNextFocusableComponent(seatsTextField);

        hallsNameTextField.setNextFocusableComponent(rowsTextField);

        seatsTextField.setNextFocusableComponent(addHallButton);

        newHallRowLabel.setText("Rows");

        newHallSeatsLabel.setText("Seats on a row");

        addHallButton.setText("Add hall!");
        addHallButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHallButtonActionPerformed(evt);
            }
        });

        nameErrorLabel.setText(" ");
        nameErrorLabel.setFocusable(false);

        rowsErrorLabel.setText(" ");
        rowsErrorLabel.setFocusable(false);

        seatsErrorLabel.setText(" ");
        seatsErrorLabel.setFocusable(false);

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = {};
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        removeHallButton.setText("Remove");
        removeHallButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeHallButtonActionPerformed(evt);
            }
        });

        hallInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hallInfoTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(hallInfoTable);
        if (hallInfoTable.getColumnModel().getColumnCount() > 0) {
            hallInfoTable.getColumnModel().getColumn(1).setResizable(false);
            hallInfoTable.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(removeHallButton)
                    .addComponent(addHallButton)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newHallNameLabel)
                            .addComponent(newHallSeatsLabel)
                            .addComponent(newHallRowLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hallsNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(rowsTextField)
                            .addComponent(seatsTextField)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatsErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                    .addComponent(rowsErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newHallNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hallsNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rowsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newHallRowLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rowsErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(seatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newHallSeatsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatsErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(addHallButton)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeHallButton)
                .addContainerGap(222, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab1", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 821, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 534, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab2", jPanel2);

        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(32, 32, 32))
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 280, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addHallButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHallButtonActionPerformed
        int i = 0;
        String name = hallsNameTextField.getText().trim();
        if (name.isEmpty()) {
            nameErrorLabel.setText("name must not be empty!");
            i++;
        }
        if (rowsTextField.getText().isEmpty()) {
            rowsErrorLabel.setText("rows must have a value!");
            i++;
        }
        if (seatsTextField.getText().isEmpty()) {
            seatsErrorLabel.setText("seats must have a value!");
            i++;
        }
        if (i > 0) {
            return;
        }

        int rows = 0;
        int seats = 0;

        try {
            rows = Integer.parseInt(rowsTextField.getText());
        } catch (NumberFormatException e) {
            rowsErrorLabel.setText("integer value should be given");
            i++;
        }

        try {
            seats = Integer.parseInt(seatsTextField.getText());
        } catch (NumberFormatException e) {
            seatsErrorLabel.setText("integer value should be given");
            i++;
        }

        if (i > 0) {
            return;
        }

        hallHandler.addNewHall(name, rows, seats);

        fillHallNames();
        emptyFields();
        fillTable();
    }//GEN-LAST:event_addHallButtonActionPerformed

    private void removeHallButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeHallButtonActionPerformed
        if (hallHandler.getHallsAsList().isEmpty()) {
            return;
        }

        if (listener.getSelectedName() == null) {
            return;
        }

        if (!confirmUserWantsToRemoveHall()) {
            return;
        }

        removeSelectedHall();
        fillHallNames();
        fillTable();
    }//GEN-LAST:event_removeHallButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addHallButton;
    private javax.swing.JTable hallInfoTable;
    private javax.swing.JTextField hallsNameTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel nameErrorLabel;
    private javax.swing.JLabel newHallNameLabel;
    private javax.swing.JLabel newHallRowLabel;
    private javax.swing.JLabel newHallSeatsLabel;
    private javax.swing.JButton removeHallButton;
    private javax.swing.JLabel rowsErrorLabel;
    private javax.swing.JTextField rowsTextField;
    private javax.swing.JLabel seatsErrorLabel;
    private javax.swing.JTextField seatsTextField;
    // End of variables declaration//GEN-END:variables

    private void fillHallNames() {
        DefaultListModel hallNamesModel = new DefaultListModel();
        for (int i = 0; i < hallHandler.getHallsAsList().size(); i++) {
            hallNamesModel.addElement(hallHandler.getHallsAsList().get(i).getName());
        }
        jList1.setModel(hallNamesModel);
    }

    private void addSelectionListenerToHallNames() {
        jList1.addListSelectionListener(listener);
    }

    private void fillTable() {

        List<Hall> halls = hallHandler.getHallsAsList();
        int size = hallHandler.getHallsAsList().size();
        int columns = 4;

        DefaultTableModel tableModel = new DefaultTableModel(1, size) {
            
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
//            getColumnModel().getColumn(1).setResizable(false);
//            getColumnModel().getColumn(2).setResizable(false);
        };

        String header[] = new String[]{"Name", "Rows", "Seats on a row",
            "Seats in total"};

        tableModel.setColumnIdentifiers(header);

        for (int i = 0; i < size; i++) {

            String[] row = new String[4];
            Hall hall = halls.get(i);
            String name = hall.getName();
            Integer rows = hall.getAmountOfRows();
            Integer seats = hall.getAmountOfRows();
            Integer totalSeats = hall.getTheTotalAmountOfSeats();

            row[0] = name;
            row[1] = rows.toString();
            row[2] = seats.toString();
            row[3] = totalSeats.toString();
            tableModel.addRow(row);
            
        }
        hallInfoTable.getColumnModel().getColumn(0).setResizable(true);
        hallInfoTable.setModel(tableModel);
        
    }

    private boolean confirmUserWantsToRemoveHall() {
        JDialog.setDefaultLookAndFeelDecorated(true);
        int response = JOptionPane.showConfirmDialog(null,
                "Are you sure you want to remove this hall?", "Confirm",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        return response == JOptionPane.YES_OPTION;

    }

    private void removeSelectedHall() {
        String selectedHall = listener.getSelectedName();
        hallHandler.removeHall(selectedHall);
        listener.resetSelection();
    }

    private void emptyFields() {
        hallsNameTextField.setText("");
        rowsTextField.setText("");
        seatsTextField.setText("");

        nameErrorLabel.setText("");
        rowsErrorLabel.setText("");
        seatsErrorLabel.setText("");
    }

    @Override
    public void run() {
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }
}
